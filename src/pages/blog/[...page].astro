---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug";

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("blog");
  if (!posts) return paginate( [], { pageSize: 10 } );
  posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
const postTags = page.data.reduce((acc, post) => {
  // Get the url for filtering by tag
  const url = "/blog/" + createSlug(post.data.title, post.slug)
  const tag_url = url.split("/").slice(0, -1).join("/") + "/tag";

  // Add the tag to the list of tags
  post.data.tags.forEach((tag) => {
    if (!acc.includes(tag)) acc.push({
      name: tag,
      url: `${tag_url}/${tag}`
    });
  });
  return acc;
}, []);
--- 

<BaseLayout title="Blog" urlMenuItem="/blog">
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Blog</div>
  </div>

  <!-- Tags Filter -->
  <div class="flex flex-wrap justify-center gap-3 py-5">
    {
        postTags.map((tag) => (
          <a href={`${tag.url}`} class="badge badge-outline badge-lg">
            {tag.name}
          </a>
        ))
    }
  </div>

  {
    page.data.length === 0 ? (
      <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
        <p class="font-bold">Sorry!</p>
        <p>There are no posts to show at this time. Come back later!</p>
      </div>
    ) : (
      <ul>
        {page.data.map((post) => (
          <>
            <HorizontalCard
              title={post.data.title}
              img={post.data.heroImage}
              desc={post.data.description}
              url={"/blog/" + createSlug(post.data.title, post.slug)}
              target="_self"
              badge={post.data.badge}
              tags={post.data.tags}
            />
            <div class="divider my-0" />
          </>
        ))}
      </ul>
    )
  }

  <div class="flex justify-between">
    {
      page.url.prev ? (
        <a href={page.url.prev} class="btn btn-ghost my-10 mx-5">
          {" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
          </svg>{" "}
          Recent Posts
        </a>
      ) : (
        <div />
      )
    }
    {
      page.url.next ? (
        <a href={page.url.next} class="btn btn-ghost my-10 mx-5">
          Older Posts
          {" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            {" "}
            <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
          </svg>
        </a>
      ) : (
        <div />
      )
    }
  </div>
</BaseLayout>
